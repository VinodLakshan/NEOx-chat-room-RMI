/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import connector.ServerConnector;
import controller.ChatController;
import java.net.MalformedURLException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author NEOx
 */
public class PrivateChatWindow extends javax.swing.JFrame {

    /**
     * Creates new form PrivateChatWindow
     */
    private MainWindow mainWindow;
    private String sendName;
    private String recieverName;
    private String msg;
    private String loginTime;
    
    public PrivateChatWindow(String sendName,String recieverName,MainWindow mainWindow) {
        initComponents();
        setLocationRelativeTo(mainWindow);
        this.sendName=sendName;
        this.recieverName=recieverName;
        this.mainWindow=mainWindow;
        titleSet(sendName, recieverName);
        Date d1=new Date(); 
        SimpleDateFormat sdf=new SimpleDateFormat("yyyy-MM-dd  HH-mm");
        this.loginTime=sdf.format(d1);
        
    }
    
    public void previewMessage(String msg){
        txtMessageBox.append(msg+"\n");
    }
    
    private void titleSet(String sendName,String receiveName){
        if (sendName.equalsIgnoreCase(mainWindow.getTitle())) {
            setTitle(receiveName);
        }else{
            setTitle(sendName);
        }
    }
    
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtMessageBox = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        receiverLbl = new javax.swing.JLabel();
        txtTypeBox = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(430, 550));
        setPreferredSize(new java.awt.Dimension(430, 550));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel1.setMinimumSize(new java.awt.Dimension(430, 550));
        jPanel1.setPreferredSize(new java.awt.Dimension(430, 550));
        jPanel1.setLayout(null);

        txtMessageBox.setEditable(false);
        txtMessageBox.setColumns(20);
        txtMessageBox.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 18)); // NOI18N
        txtMessageBox.setRows(5);
        jScrollPane2.setViewportView(txtMessageBox);

        jPanel1.add(jScrollPane2);
        jScrollPane2.setBounds(20, 50, 380, 400);

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/userIcon.png"))); // NOI18N
        jPanel1.add(jLabel5);
        jLabel5.setBounds(20, 10, 40, 30);

        receiverLbl.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        receiverLbl.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.add(receiverLbl);
        receiverLbl.setBounds(70, 10, 160, 30);

        txtTypeBox.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtTypeBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTypeBoxActionPerformed(evt);
            }
        });
        jPanel1.add(txtTypeBox);
        txtTypeBox.setBounds(20, 460, 380, 40);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/sdasd.png"))); // NOI18N
        jLabel2.setText("jLabel2");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(0, 0, 430, 560);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/New Keyboard.png"))); // NOI18N
        jPanel1.add(jLabel1);
        jLabel1.setBounds(0, 0, 430, 560);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 526, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtTypeBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTypeBoxActionPerformed
        try {
            String msg=sendName+"  :  "+txtTypeBox.getText();
            ChatController chatController = ServerConnector.getServerConnector().getChatController();
            chatController.setPrivateChat(msg, this.sendName, this.recieverName);
            txtTypeBox.setText("");
        } catch (NotBoundException ex) {
            Logger.getLogger(PrivateChatWindow.class.getName()).log(Level.SEVERE, null, ex);
        } catch (MalformedURLException ex) {
            Logger.getLogger(PrivateChatWindow.class.getName()).log(Level.SEVERE, null, ex);
        } catch (RemoteException ex) {
            Logger.getLogger(PrivateChatWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_txtTypeBoxActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        //mainWindow.removeonlineChatter(this);
        
        Date d=new Date();
        SimpleDateFormat sdf=new SimpleDateFormat("hh-mm");
        String logoutTime=sdf.format(d);
        
        String allMsg=txtMessageBox.getText();
        String [] forDay=allMsg.split("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
        String msg=forDay[forDay.length-1];
        String[] msgs=msg.split("\n");
        
        try {
            ChatController chatController = ServerConnector.getServerConnector().getChatController();
            chatController.privateChatHistory(logoutTime,loginTime,sendName,this.getTitle(),msgs);
        } catch (NotBoundException ex) {
            Logger.getLogger(PrivateChatWindow.class.getName()).log(Level.SEVERE, null, ex);
        } catch (MalformedURLException ex) {
            Logger.getLogger(PrivateChatWindow.class.getName()).log(Level.SEVERE, null, ex);
        } catch (RemoteException ex) {
            Logger.getLogger(PrivateChatWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel receiverLbl;
    private javax.swing.JTextArea txtMessageBox;
    private javax.swing.JTextField txtTypeBox;
    // End of variables declaration//GEN-END:variables

    public void setPrivateChatHistory(String[] privateChatHistory) {
        if(privateChatHistory != null){
            for (int i = 0; i < privateChatHistory.length ; i++) {
                txtMessageBox.append(privateChatHistory[i]+"\n");
            }
            txtMessageBox.append("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
        }
        
    }
}
